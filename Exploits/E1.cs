
using UnityEngine;
using VRC.SDKBase;
using System.Collections;
using ExitGames.Client.Photon;
using Photon.Realtime;

namespace HellsingPc.Exploits
{
    internal class E1
    {
        internal static IEnumerator EarrapeEvent()
        {
            while (HellsingPc.Main.Earrape)
            {
                byte[] VoiceData = System.Convert.FromBase64String(
                    "AAAAAAAAAAC7hjsA+H3owFygUv4w78B7lcSx14zff9FCPADiNbSwYWgE+O7Dhiy5tkRecs21ljjofvebe6xsYlA4c9s8G69=");
                byte[] nulldata = new byte[4];//change value
                byte[] ServerTime = System.BitConverter.GetBytes(Networking.GetServerTimeInMilliseconds());
                System.Buffer.BlockCopy(nulldata, 0, VoiceData, 0, 4);
                System.Buffer.BlockCopy(ServerTime, 0, VoiceData, 4, 4);
                int num;
                for (int i = 0; i < 5; i = num + 1)//change value
                {
                    HellsingPc.Misc.PhotonEX.OpRaiseEvent(1, VoiceData, new RaiseEventOptions
                    {
                        field_Public_EventCaching_0 = 0,
                        field_Public_ReceiverGroup_0 = 0
                    }, default(SendOptions));
                    num = i;
                }
                VoiceData = null;
                nulldata = null;
                ServerTime = null;
                yield return new WaitForSeconds(0.2f);
            }
            yield break;
        }
    }
}


using UnityEngine;
using VRC.SDKBase;
using System.Collections;
using ExitGames.Client.Photon;
using Photon.Realtime;
using static HellsingPc.Misc.Config;
namespace HellsingPc.Exploits
{
    internal class E1
    {
        internal static IEnumerator EarrapeEvent()
        {
            while (Earrape)
            {
                byte[] VoiceData = System.Convert.FromBase64String("AAAAAAAAAAC7hjsA+H3owFygUv4w5B67lcSx14zff9FCPADiNbSwYWgE+O7Dhiy5tkRecs21ljjofvebe6xsYlA4cVmght0=");
                byte[] nulldata = new byte[4];
                byte[] ServerTime = System.BitConverter.GetBytes(Networking.GetServerTimeInMilliseconds());
                System.Buffer.BlockCopy(nulldata, 0, VoiceData, 0, 4);
                System.Buffer.BlockCopy(ServerTime, 0, VoiceData, 4, 4);
    
                for (int i = 0; i < 5; i++)
                {
                    HellsingPc.Misc.PhotonEX.OpRaiseEvent(1, VoiceData, new RaiseEventOptions
                    {
                        field_Public_EventCaching_0 = 0,
                        field_Public_ReceiverGroup_0 = 0
                    }, default(SendOptions));
                }
                yield return new WaitForSeconds(0.2f);
            }
            yield break;
        }

    }
}
